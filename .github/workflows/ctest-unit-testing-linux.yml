# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CI CTest Unit Testing on Linux

on:
  push:
    branches:
      - $default-branch
      - dev
  pull_request:
    branches:
      - $default-branch
      - dev

env:
  BUILD_TYPE: Release
  CROSS_TYPE: linux

jobs:
  build-and-test:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: [ubuntu-22.04, ubuntu-20.04]

    steps:
    - name: Install Dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: build-essential cmake
        version: 1.0

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build/linux -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build/linux --config ${{env.BUILD_TYPE}} --config ${{env.CROSS_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build/linux
      run: ctest -C ${{env.BUILD_TYPE}}
