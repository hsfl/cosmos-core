# Note, should be run with a database specified (see inittables.sh)
# The docker mysql entrypoint script will ignore this folder

####################################################
### TABLES #########################################
####################################################
# List of nodes in the realm
# node_id: Node id within realm
# node_name: Node name
# node_utcstart: Node utcstart time
drop database cosmos;
create database cosmos;
use cosmos;

CREATE TABLE IF NOT EXISTS node (
    # node_id TINYINT UNSIGNED NOT NULL UNIQUE,
    node_name VARCHAR(40) NOT NULL UNIQUE, #nodestruc
    agent_name VARCHAR(40) NOT NULL, #nodestruc
    utc DATETIME(1), #nodestruc
    utcstart DATETIME(1), #nodestruc
    PRIMARY KEY (node_name)
);

# BATT devices
# node_id: Node id
# didx: Index of Battery in device table
# device_batt_utc: Telem timestamp (decisecond precision)
# device_batt_volt: Voltage in V
# device_batt_amp: Current in A
# device_batt_power: Power in W
# device_batt_temp: Temperature in K
# device_batt_percentage: Disk space usage percentage
CREATE TABLE IF NOT EXISTS battstruc (
    node_name VARCHAR(40) NOT NULL,
    didx TINYINT UNSIGNED NOT NULL, #devicestruc
    name VARCHAR(40),
    utc DATETIME(1) NOT NULL, #devicestruc
    volt DECIMAL(5,2), #devicestruc
    amp DECIMAL(5,2), #devicestruc
    power DECIMAL(5,2), #devicestruc
    temp DECIMAL(5,2), #devicestruc
    percentage DECIMAL(5,2), #battstruc
    PRIMARY KEY (node_name, didx, utc)
);

# BCREG devices
# node_id: Node id
# didx: Index of BCREG in device table
# device_bcreg_utc: Telem timestamp (decisecond precision)
# device_bcreg_volt: Voltage in V
# device_bcreg_amp: Current in A
# device_bcreg_power: Power in W
# device_bcreg_mpptin_amp: Current in A
# device_bcreg_mpptin_volt: Current in V
# device_bcreg_mpptout_amp: Current in A
# device_bcreg_mpptout_volt: Current in V


CREATE TABLE IF NOT EXISTS bcregstruc (
    node_name VARCHAR(40) NOT NULL,
    didx TINYINT UNSIGNED NOT NULL, #devicestruc
    name VARCHAR(40),
    utc DATETIME(1) NOT NULL, #devicestruc
    volt DECIMAL(5,2), #devicestruc
    amp DECIMAL(5,2), #devicestruc
    power DECIMAL(5,2), #devicestruc
    temp DECIMAL(5,2), #devicestruc
    mpptin_amp DECIMAL(5,2),
    mpptin_volt DECIMAL(5,2),
    mpptout_amp DECIMAL(5,2),
    mpptout_volt DECIMAL(5,2),
    PRIMARY KEY (node_name, didx, utc)
);

# CPU devices
# node_id: Node id
# didx: Index of CPU in device table
# device_cpu_utc: Telem timestamp (decisecond precision)
# device_cpu_uptime: Seconds CPU has been up
# device_cpu_boot_count: Number of reboots
# device_cpu_load: Current CPU load
# device_cpu_gib: Memory usage (RAM + Virtual) in gib
# device_cpu_storage: Disk space usage percentage
# device_cpu_temp: CPU temperature (in C)
CREATE TABLE IF NOT EXISTS cpustruc (
    node_name VARCHAR(40) NOT NULL,
    didx TINYINT UNSIGNED NOT NULL, #devicestruc
    name VARCHAR(40),
    utc DATETIME(1) NOT NULL, #devicestruc
    temp DECIMAL(5,2), #devicestruc
    uptime INT UNSIGNED,
    load DECIMAL(5,2),
    gib DECIMAL(5,2),
    bootcount INT UNSIGNED,
    storage DECIMAL(5,2),
    PRIMARY KEY (node_name, didx, utc)
);

# Magnetometer
# node_id: Node id
# didx: Index of magnetometer in device table
# device_mag_mag_utc: Telem timestamp (decisecond precision)
# device_mag_mag_x: Magnetometer reading x axis
# device_mag_mag_y: Magnetometer reading y axis
# device_mag_mag_z: Magnetometer reading z axis

CREATE TABLE IF NOT EXISTS magstruc (
    node_name VARCHAR(40) NOT NULL,
    didx TINYINT UNSIGNED NOT NULL, #devicestruc
    name VARCHAR(40),
    utc DATETIME(1) NOT NULL, #devicestruc
    mag_x DECIMAL(5,2),
    mag_y DECIMAL(5,2),
    mag_z DECIMAL(5,2),
    PRIMARY KEY (node_id, didx, utc)
);

# EPS Switch devices
# node_id: Node id
# didx: ID of switch in device table
# device_swch_utc: Telem timestamp (decisecond precision)
# device_swch_volt: Voltage in V
# device_swch_amp: Current in A
# device_swch_power: Power in W
CREATE TABLE IF NOT EXISTS swchstruc (
    node_name VARCHAR(40) NOT NULL,
    didx TINYINT UNSIGNED NOT NULL,
    name VARCHAR(40),
    utc DATETIME(1) NOT NULL, #devicestruc
    volt DECIMAL(5,2), #devicestruc
    amp DECIMAL(5,2), #devicestruc
    power DECIMAL(5,2), #devicestruc
    temp DECIMAL(5,2), #devicestruc
    PRIMARY KEY (node_name, didx, utc)
);

# TSEN devices
# node_id: Index of TSEN in device table
# didx: Index of TSEN in device table
# device_tsen_utc: Timestamp of telem point
# device_tsen_temp: Temperature value of thermal sensor

CREATE TABLE IF NOT EXISTS tsenstruc (
    node_name VARCHAR(40) NOT NULL,
    didx TINYINT UNSIGNED NOT NULL,
    name VARCHAR(40),
    utc DATETIME(1) NOT NULL, #devicestruc
    temp DECIMAL(5,2), #devicestruc
    PRIMARY KEY (node_name, didx, utc)
);

# Position in ECI
# node_id: Node id
# node_loc_pos_eci_s_utc: Telem timestamp (decisecond precision)
# node_loc_pos_eci_s_x: X position in ECI (in meters)
# node_loc_pos_eci_s_y: Y position in ECI (in meters)
# node_loc_pos_eci_s_z: Z position in ECI (in meters)
# x: X velocity in ECI (in meters)
# y: Y velocity in ECI (in meters)
# z: Z velocity in ECI (in meters)
# node_loc_pos_eci_a_x: X acceleration in ECI (in meters)
# node_loc_pos_eci_a_y: Y Acceleration in ECI (in meters)
# node_loc_pos_eci_a_z: Z Acceleration in ECI (in meters)
CREATE TABLE IF NOT EXISTS locstruc_eci (
    node_name VARCHAR(40) NOT NULL,
    utc DATETIME(1) NOT NULL,
    s_x DECIMAL(15,8),
    s_y DECIMAL(15,8),
    s_z DECIMAL(15,8),
    v_x DECIMAL(15,8),
    v_y DECIMAL(15,8),
    v_z DECIMAL(15,8),
    a_x DECIMAL(15,8),
    a_y DECIMAL(15,8),
    a_z DECIMAL(15,8),
    PRIMARY KEY (node_name, utc)
);

# Attitude in ICRF, 0th derivative
# node_id: Node id
# node_loc_att_icrf_utc: Telem timestamp (decisecond precision)
# node_loc_att_icrf_s_d_x: X quaternion in ICRF
# node_loc_att_icrf_s_d_y: Y quaternion in ICRF
# node_loc_att_icrf_s_d_z: Z quaternion in ICRF
# node_loc_att_icrf_s_w: W quaternion in ICRF
# node_loc_att_icrf_v_col_0: X quaternion in ICRF
# node_loc_att_icrf_v_col_1: Y quaternion in ICRF
# node_loc_att_icrf_v_col_2: Z quaternion in ICRF
# node_loc_att_icrf_a_col_0: X quaternion in ICRF
# node_loc_att_icrf_a_col_1: Y quaternion in ICRF
# node_loc_att_icrf_a_col_2: Z quaternion in ICRF
CREATE TABLE IF NOT EXISTS attstruc_icrf (
    node_name VARCHAR(40) NOT NULL,
    utc DATETIME(1) NOT NULL,
    s_x DECIMAL(15,8),
    s_y DECIMAL(15,8),
    s_z DECIMAL(15,8),
    s_w DECIMAL(15,8),
    omega_x DECIMAL(15,8),
    omega_y DECIMAL(15,8),
    omega_z DECIMAL(15,8),
    alpha_x DECIMAL(15,8),
    alpha_y DECIMAL(15,8),
    alpha_z DECIMAL(15,8),
    PRIMARY KEY (node_name, utc)
);

